@model _Models.EF.News

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@{ 
    var CreateBy = ShopOnline.Areas.Admin.Controllers.BaseController.NguoiDungHienTai.UserAccount;
}
<h4 class="control-label col-md-4">@Html.ActionLink("Quay lại trang index", "Index", "News")</h4>
@using (Html.BeginForm("Create","News",new { CreateBy = @CreateBy },FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    
    <h4 class="control-label col-md-2">News</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.NewsName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NewsName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NewsName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("lblParentNewsName", "ParentNewsName")
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ParentNewsID, ViewBag.ParentNewsName as SelectList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ParentNewsID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SeoTittle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SeoTittle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SeoTittle, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MetaKeywords, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MetaDescriptions, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MetaDescriptions, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MetaDescriptions, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("", "Trạng Thái", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("trangthai", new SelectList(new string[] { "Kích Hoạt", "Khóa" }), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShowOnHome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("showOnTop", new SelectList(new string[] { "Có", "Không" }), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ShowOnHome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="CreateNews" class="btn btn-default" />
        </div>
    </div>
</div>
    if (TempData["msg"] != null)
    {
        @Html.Raw(TempData["msg"]);
    }
}