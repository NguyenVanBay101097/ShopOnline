@model _Models.EF.About

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section jsFooter{
    <script>
        CKEDITOR.replace("txtDetail", {
            customConfig: './config.js'

        });
    </script>
    }
@using (Html.BeginForm())
{
   
    <div class="form-horizontal">
        <div class="container">
            <h4>Create About</h4>
            <h5>@Html.ActionLink("Quay lại trang index", "Index", "About")</h5>
            <hr />
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AboutName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AboutName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AboutName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Detail, new { @class = "form-control", @id = "txtDetail" })
                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MetaKeywords, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaDescriptions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MetaDescriptions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaDescriptions, "", new { @class = "text-danger" })
            </div>
        </div>
        @{ 
            string nguoiDungHienTai = ShopOnline.Areas.Admin.Controllers.BaseController.NguoiDungHienTai.UserAccount;
        }
        @Html.TextBoxFor(model=>model.CreateBy,new {@class="sr-only",@Value= @nguoiDungHienTai })
        <div class="form-group">
          @Html.Label("","Status",new {@class= "container" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.DropDownList("tempstatus", new SelectList(new[] { "Kích Hoạt", "Khóa" }), new { @class = "form-control " })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    if (TempData["msg"] != null)
    {
        @Html.Raw(TempData["msg"]);
    }
}



